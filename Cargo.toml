[package]
name = "rjrssync"
version = "0.1.0"
description = "Fast rsync-like tool for incrementally copying files. Runs natively on both Windows and Linux and uses network for communication."
edition = "2021"
repository = "https://github.com/Robert-Hughes/rjrssync"
license = "MIT"
keywords = [ "filesystem", "binary", "tool", "cross-platform", "sync" ]
# crates.io only allows 5 keywords, here are some others that might be good too: [ "filesystem", "cli", "windows", "linux", "binary", "tool", "cross-platform", "sync", "mirror", "copying" ]
categories = [ "command-line-utilities", "development-tools", "filesystem" ]

[dependencies]
clap = { version = "=4.0.18", features = ["derive"] }
clap_complete = "=4.0.6"
env_logger = "=0.9.1"
log="=0.4.17"
rust-embed = { version = "=6.4.2", features = [ "debug-embed", "include-exclude" ] } # debug-embed Otherwise the behaviour is different in debug vs release builds
tempdir="=0.3.7"
serde = { version = "=1.0.147", features = ["derive"] }
serde_bytes = "=0.11.7"
bincode = "=1.3.3"
filetime = "=0.2.18"
regex = "=1.6.0"
aes-gcm = "=0.10.1"
aead = {version = "=0.5.1", features = ["bytes"]}
base64 = "=0.13.1"
yaml-rust = "=0.4.5"
lazy_static = "=1.4.0"
bytes = "=1.3.0"
const_format = "=0.2.30"
indicatif = "=0.17.2"
dialoguer = "=0.10.2"
console = "=0.15.2"
winapi = { version = "=0.3.9", features=["psapi"] }
crossbeam = "=0.8.2"
num_cpus = "=1.15.0"

# Profiling-only dependencies
json = { version = "=0.12.4", optional = true }

# Dependencies needed for tests/benchmarks, which aren't needed for building on a remote
#if NonRemote
walkdir="=2.3.2"
tempfile = "=3.3.0"
map-macro = "=0.2.4"
network-interface = "=0.1.5"
fs_extra = "=1.2.0"
ascii_table = "=4.0.2"
rand = "=0.8.5"
#end

[features]
profiling=["dep:json"]

# Note this is orthogonal to the profiling _feature_, and is for including symbols in a release build so that an
# external profiling tool can be used.
[profile.profiling]
inherits = "release"
debug = 1

[[bin]]
name = "rjrssync"
bench = false # Prevent from being run as a benchmark when running "cargo bench"

#if NonRemote
# Note that these other executables are not in a [[bin]] section, so they don't get 
# installed (etc.) by default - only the main rjrssync executable should get installed,
# as these are just for testing/development.
[[bench]]
name = "benchmarks"
harness = false

[[example]]
name = "piper"
bench = false # Prevent from being run as a benchmark when running "cargo bench"

[[example]]
name = "tcper"
bench = false # Prevent from being run as a benchmark when running "cargo bench"

[[example]]
name = "walker"
bench = false # Prevent from being run as a benchmark when running "cargo bench"

#end